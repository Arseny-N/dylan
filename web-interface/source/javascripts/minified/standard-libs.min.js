!function(r,e){function t(e,t,n){function o(r){console.dir(r);var e;try{e=JSON.parse(r.responseText).result}catch(t){var n={text:"Broken response from server",data:r.responseText,name:"FailedResponseExeption"};throw n}return e}function i(e,t){switch(r.utils.currrentOp(""),t){case"success":return n&&n(void 0,o(e));default:var i={code:e.status,text:e.statusText,data:e.responseText};if(!n)throw i.name="FailedResponseExeption",i;return n(i)}}var a=r.api[t]({req:e}).complete(i);if(200==a.status)return o(a);var u={code:a.status,text:a.statusText,data:a.responseText};return u}r.libs={},r.libs.gen_logger=function(e){return{error:function(t){"string"!=typeof t&&(t=t.toSource?t.toSource():t.toString()),r.logs.raw.add(new r.LoggerEntry({emitter:"script",context:e,body:t,prio:"danger"}))},info:function(t){"string"!=typeof t&&(t=t.toSource?t.toSource():t.toString()),r.logs.raw.add(new r.LoggerEntry({emitter:"script",context:e,body:t,prio:"info"}))},warn:function(t){"string"!=typeof t&&(t=t.toSource?t.toSource():t.toString()),r.logs.raw.add(new r.LoggerEntry({emitter:"script",context:e,body:t,prio:"warning"}))},dir:function(e,t){return r.utils.object2string(e,t)}}},r.libs.gen_docs=function(r){return{list:function(){return r.map(function(r){return r.get("name")})},get_data:function(e){var t=r.where({name:e})[0];return t?t.get("data"):t},set_data:function(e,t){var n=r.where({name:e})[0];return n?n.set("data",t):n}}},r.libs._=r.libs.underscore=e,r.libs.api={reg:{},mem:{}},r.libs.api.mem.write=function(e,n,o){var i=[e,n];if("number"!=typeof e)throw TypeError("`address' and `count' should be a number");if(n.__proto__!=Array.prototype)throw TypeError("`data' should be an array of numbers");for(var a=0;a<n.length;++a)if("number"!=typeof n[a])throw TypeError("`data' should be an array of numbers");return r.utils.currrentOp("mem.write"),t(i,"mem_write",o)},r.libs.api.mem.read=function(e,n,o){var i=[e,n];if("number"!=typeof e||"number"!=typeof n)throw TypeError("`address' and `count' should be a number");return r.utils.currrentOp("mem.read"),t(i,"mem_read",o)},r.libs.api.reg.read=function(e,n){var o=[e];if("number"!=typeof e)throw TypeError("`reg' should be a number");return r.utils.currrentOp("reg.read"),t(o,"reg_read",n)},r.libs.api.reg.write=function(e,n,o){var i=[e,n];if("number"!=typeof e||"number"!=typeof n)throw TypeError("`data' and `reg' should be a number");return r.utils.currrentOp("reg.write"),t(i,"reg_write",o)},r.libs.api.poll=function(e,t,n,o){if(o||(o=50),"number"!=typeof e||"number"!=typeof t||"number"!=typeof n)throw TypeError("`address', `mask', `value' should be a number");r.utils.currrentOp("poll");var i;do i=r.libs.api.reg.read(e),o-=1;while((i&t)!=(n&t)&&o>0);r.utils.currrentOp("")},r.libs.api.wait=function(e,t,n,o,i,a){if(i||(i=100),a||(a=50),"number"!=typeof e||"number"!=typeof t||"number"!=typeof n||"number"!=typeof a)throw TypeError("`address', `mask', `value' should be a number");setTimeout(function u(){r.utils.currrentOp("wait");var s=r.libs.api.reg.read(e);return a-=1,(s&t)==(n&t)||0==a?void(o&&o(s)):(r.utils.currrentOp(""),void setTimeout(u,i))},i)},r.libs.console_api={r:{},m:{}},r.libs.console_api.m.w=function(e,t){return r.libs.api.mem.write(e,t)},r.libs.console_api.m.r=function(e,t){return r.libs.api.mem.read(e,t)},r.libs.console_api.r.r=function(e){return r.libs.api.reg.read(e)},r.libs.console_api.r.w=function(e,t){return r.libs.api.reg.write(e,t)}}(app,_);